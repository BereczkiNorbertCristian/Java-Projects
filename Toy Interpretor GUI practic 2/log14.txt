PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
30 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
32 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
32 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
32 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
32 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
32 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
v1=new(20);
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v1=new(20)
THE SYMBOL TABLE:
THE OUTPUT LIST:
THE FILETABLE:
HEAP:

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
v2=new(30);
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
v2=new(30)
THE SYMBOL TABLE:
v1 = 1
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
newLock(x);
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
newLock(x)
THE SYMBOL TABLE:
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x));
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x));
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x));
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
fork(fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
fork(lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
skip;
skip;
skip;
skip;
skip;
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
fork(WriteToHeap(v2,ReadFromHeap(v2)+1));
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
lock(x);
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
fork(WriteToHeap(v2,ReadFromHeap(v2)+1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:140
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 30

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v2,ReadFromHeap(v2)+1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 31

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
lock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:140
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
WriteToHeap(v1,ReadFromHeap(v1)-1);
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
WriteToHeap(v1,ReadFromHeap(v1)-1)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 21
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip;
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
unlock(x)
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:1400
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
skip
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v1));
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
print(ReadFromHeap(v1))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
print(ReadFromHeap(v2))
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

PROGRAM ID:14
THE EXECUTION STACK:
THE SYMBOL TABLE:
x = 1
v1 = 1
v2 = 2
THE OUTPUT LIST:
20 
32 
THE FILETABLE:
HEAP:
1 = 20
2 = 32

